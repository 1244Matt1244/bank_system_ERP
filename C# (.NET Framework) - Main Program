using System;

class Program
{
    static void Main(string[] args)
    {
        using (var context = new BankSystemContext())
        {
            using (var unitOfWork = new UnitOfWork(context))
            {
                // Example: Adding a new customer
                var newCustomer = new Customer { Name = "John Doe", Email = "john.doe@example.com" };
                unitOfWork.CustomerRepository.Insert(newCustomer);
                unitOfWork.Save();

                // Fetch all customers
                var customers = unitOfWork.CustomerRepository.GetAll();
                foreach (var customer in customers)
                {
                    Console.WriteLine($"{customer.Id}: {customer.Name} ({customer.Email})");
                }
            }
        }
    }
}

public class UnitOfWork : IDisposable
{
    private readonly BankSystemContext _context;
    private IGenericRepository<Customer> _customerRepository;
    private IGenericRepository<Transaction> _transactionRepository;

    public UnitOfWork(BankSystemContext context)
    {
        _context = context;
    }

    public IGenericRepository<Customer> CustomerRepository
    {
        get
        {
            return _customerRepository ??= new GenericRepository<Customer>(_context);
        }
    }

    public IGenericRepository<Transaction> TransactionRepository
    {
        get
        {
            return _transactionRepository ??= new GenericRepository<Transaction>(_context);
        }
    }

    public void Save()
    {
        _context.SaveChanges();
    }

    public void Dispose()
    {
        _context.Dispose();
    }
}
